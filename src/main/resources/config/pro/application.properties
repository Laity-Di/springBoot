#server port
server.port=8081

# 数据库访问配置
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=didi
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxIdle=10
# 配置获取连接等待超时的时间
spring.datasource.maxWait=10000
spring.datasource.testWhileIdle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=3600000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true

#redis config
data.redis.defaultExpiration=3600
redis.master.host=10.29.30.28
redis.master.port=6379
redis.master.name=
redis.sentinel1.host=
redis.sentinel1.port=0
redis.sentinel2.host=
redis.sentinel2.port=0
redis.sentinel3.host=
redis.sentinel3.port=0

#security
filter.allowedOrigin=*
springBootTest.security.allowedRoutes=/**
filter.allowedHeaders=Access-Control-Allow-Credentials, Origin, No-Cache, x-auth-token, X-Requested-With, If-Modified-Since, Pragma, Last-Modified, Cache-Control, Access-Control-Allow-Origin, Expires, Content-Type, Authorization, productLineId, cookie